name: Build Elementa v0.0.0

on:
  push:
    branches:
      - main

  workflow_dispatch:
env:
  java_ver: "19.0.2"
  ver: 0.0.0
  tag: "v0.0.0-experimental+build.1"

jobs:
  build-jar:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: "temurin"
          architecture: "x64"

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: files
          path: build/libs/

  build-exe:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write

    needs: [ build-jar ]

    runs-on: windows-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: "temurin"
          architecture: "x64"
          check-latest: true

#      - name: setup jre
#        uses: actions/setup-java@v4
#        with:
#          java-version: ${{ env.java_ver }}
#          distribution: "temurin"
#          java-package: "jre"
#          architecture: "x64"
#          check-latest: true

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: download jar
        uses: actions/download-artifact@v4

      - name: build exe
        run: ./gradlew createExe

      - name: cosign install
        shell: pwsh
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-windows-amd64.exe
          mv cosign-windows-amd64.exe cosign.exe
          chmod +x cosign.exe
          echo "$(pwd)" >> $GITHUB_PATH

      - name: verify installation
        run: |
          ./cosign.exe version

      - name: sign exe
        shell: pwsh
        run: |
          ./cosign sign-blob build/libs/elementa-0.0.0.exe --output-signature build/libs/elementa-0.0.0.exe.sig --yes
        env:
          COSIGN_EXPERIMENTAL: "true"

      - name: verify
        shell: pwsh
        run: |
          ./cosign verify-blob --signature build/libs/elementa--0.0.0.exe --certificate build/libs/elementa-0.0.0.exe 

      - name: upload exe
        uses: actions/upload-artifact@v4
        with:
          name: exe
          path: build/libs/elementa-0.0.0.exe

  release:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write

    needs: [ build-jar, build-exe ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: download files
        uses: actions/download-artifact@v4

      - name: create release
        uses: softprops/action-gh-release@v2
        with:
          name: Elementa V${{ env.ver }}
          tag_name: ${{ env.tag }}
          body_path: ${{ github.workspace}}/changelog.md
          draft: true
          generate_release_notes: true
          files: |
            files/*.jar
            exe/*.exe