plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'edu.sc.seis.launch4j' version '3.0.6'
}

group = project.property("group")
version = project.version
def lwjglVersion = project.property("lwjgl_ver")
def lwjglNatives = project.property("lwjgl_natives")

repositories {
    mavenCentral()
}

application {
    mainClass = "xyz.theunknowngroup.ElementaMain"
}

launch4j {
    mainClassName = "xyz.theunknowngroup.ElementaMain"
    outputDir = "libs/"
    outfile = "elementa-0.0.0.exe"
    copyright = "MIT"
    xmlFileName = "elementa.xml"
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation platform("org.lwjgl:lwjgl-bom:${lwjglVersion}")
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::${lwjglNatives}"
    runtimeOnly "org.lwjgl:lwjgl-assimp::${lwjglNatives}"
    runtimeOnly "org.lwjgl:lwjgl-glfw::${lwjglNatives}"
    runtimeOnly "org.lwjgl:lwjgl-openal::${lwjglNatives}"
    runtimeOnly "org.lwjgl:lwjgl-opengl::${lwjglNatives}"
    runtimeOnly "org.lwjgl:lwjgl-stb::${lwjglNatives}"
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it)}
    }
    manifest {
        attributes 'Main-Class': 'xyz.theunknowngroup.ElementaMain'
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(19))
    }
}