plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'edu.sc.seis.launch4j' version '3.0.6'
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    mavenLocal()
    google()
    maven { url 'https://s01.oss.sonatype.org' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
}

group = project.property("group")
version = project.version
//def lwjglVersion = project.property("lwjgl_ver")
//def lwjglNatives = project.property("lwjgl_natives")

application {
    mainClass = "xyz.theunknowngroup.ElementaMain"
}

launch4j {
    mainClassName = "xyz.theunknowngroup.ElementaMain"
    outputDir = "libs/"
    outfile = "elementa-0.0.0.exe"
    copyright = "MIT"
    xmlFileName = "${projectDir}/exe/elementa.xml"
    windowTitle = "Elementa"
    companyName = "TheUnknownGroup"
    jreMinVersion = project.target
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"


    if(enableGraalNative == 'true') {
        implementation "io.github.berstanio:gdx-svmhelper-backend-lwjgl3:$graalHelperVersion"
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it)}
    }
    manifest {
        attributes 'Main-Class': 'xyz.theunknowngroup.ElementaMain'
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(19))
    }
}